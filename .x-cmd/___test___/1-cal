data_class | ja '
D==1 && v()!~"[{[]"{ clist[ ++clistl ] = K}
k()=="score"{
    total[ O[1] ] += V
    count[ O[1] ] ++
}

END{
    for (i=1; i<=clistl; ++i) {
        c = clist[i]
        printf("%s: [number=%s] [average=%s]\n", c, count[c], total[c]/count[c])
    }
}
'

data_class | ja '
k()=="score"{
    total[ O[D] ] += V
    count[ O[D] ] ++
}

END{
    for (c in total)
        printf("%s: [number=%s] [average=%s]", juq(c), count[c], total[c]/count[c])
}

'


data_class | ja '{ print g(".name") }'      # data_class | jq '.name'

data_class | ja 'k()=="score"{ s+=v(); c++; } END{ print s/c; }'
data_class | ja 'km("score"){ s+=v(); c++; } END{ print s/c; }'
data_class | ja 'krm("score"){ s+=v(); c++; } END{ print s/c; }'


eval "$(data_class | ja 'K~/sco/{ s+=V; c++; } END{ print "avg=" s/c; }')"    # printf "%s" "$avg"

eval "$(data_class | ja 'K~/sco/{ s+=V; c++; } END{ print "O=" (s/c); }')"    # printf "%s" "$O"
eval "$(data_class | ja 'k()=="score"{ s+=V; c++; } END{ print "O=" (s/c); }')"    # printf "%s" "$O"

eval "$(data_class | ja 'O[2]~/sco/{ s+=v(); c++; } END{ print "O=" (s/c); }')"    # printf "%s" "$O"

avg="$(data_class | ja 'O[2]~/sco/{ s+=v(); c++; } END{ print(s/c); }')"    # printf "%s" "$O"
echo "arg: $avg"
data_class | jq -r .name
data_class | ja 'k()=="name"{ print v(); }'
data_class | ja '{ pr("name") }'
data_class | ja 'END{ p(kp(1,"classB")) }'  | x jo